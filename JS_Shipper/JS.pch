//
//  JS.pch
//  JS_Driver
//
//  Created by Jason_zyl on 2019/3/6.
//  Copyright © 2019 Jason_zyl. All rights reserved.
//

#ifndef JS_pch
#define JS_pch

/****************************头文件*****************************/
#ifdef __OBJC__

#import "AppDelegate.h"
#import "BaseVC.h"
#import "BaseWebVC.h"
#import <UIImageView+WebCache.h>
#import <UIButton+WebCache.h>
#import "Utils.h"
#import "CacheUtil.h"
#import "ReactiveObjC.h"
#import "Masonry.h"
#import <XLGCategory.h>
#import "UserInfo.h"
#import "Config.h"
#import "NetworkManager.h"
#import "JHHJView.h"
#import "XLGLottie.h"
#import <MJExtension.h>
#import <MJRefresh.h>
#import "XLGAlertView.h"
#import <FXToast.h>
#endif

#define kCachePath [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) firstObject]

/******************************keys****************************/

// 友盟key
#define kUMKey     @"5c710878b465f5fa50000071"

// 网络请求key
#define kSignKey   @"ghOwfR7Wz44cbKU93KVSxwYXPGloNu"
#define kNonceStr  [SignKeyUtil getNonceString]

// cache key
#define kServerKey @"ServerKey"
#define kWifiKey   @"WifiKey"
#define kSelectCourseIDKey   @"SelectCourseIDKey"
#define PageSize   @"10"

#define kAuthStateStrDic @{@(0):@"未提交",@(1):@"认证中",@(2):@"已认证",@(3):@"认证失败"}
#define kAuthStateColorDic @{@(0):kVerifiedUnCommitColor,@(1):kVerifiedOnColor,@(2):AppThemeColor,@(3):kVerifiedFailColor}
#define  CHANNEL_ALI_PAY  @"1";//支付宝app支付
#define  CHANNEL_WX_PAY  @"2";//微信app支付
#define  CHANNEL_UNION_PAY @"3";//银联app支付

/******************************通知****************************/

#define kLoginSuccNotification  @"kLoginSuccNotification"
#define kLogoutSuccNotification  @"kLogoutSuccNotification"
#define kUserInfoChangeNotification  @"kUserInfoChangeNotification"

/********************屏幕宽高、系统版本、手机型号******************/

#define SCREEN_BOUNDS [[UIScreen mainScreen] bounds]
#define WIDTH  [[UIScreen mainScreen] bounds].size.width
#define HEIGHT [[UIScreen mainScreen] bounds].size.height

#define kNavBarH ((IS_IPHONE_X == YES || IS_IPHONE_Xr == YES || IS_IPHONE_Xs == YES || IS_IPHONE_Xs_Max == YES) ? 88.0 : 64.0)
#define kStatusBarH ((IS_IPHONE_X == YES || IS_IPHONE_Xr == YES || IS_IPHONE_Xs == YES || IS_IPHONE_Xs_Max == YES) ? 44.0 : 20.0)
#define kTabBarH ((IS_IPHONE_X == YES || IS_IPHONE_Xr == YES || IS_IPHONE_Xs == YES || IS_IPHONE_Xs_Max == YES) ? 83.0 : 49.0)
#define kTabBarSafeH ((IS_IPHONE_X == YES || IS_IPHONE_Xr == YES || IS_IPHONE_Xs == YES || IS_IPHONE_Xs_Max == YES) ? 34.f:0.0f)

// 判断是否是ipad
#define isPad ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad)
// 判断iPhone4系列
#define kiPhone4 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 960), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
// 判断iPhone5系列
#define kiPhone5 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
// 判断iPhone6系列
#define kiPhone6 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(750, 1334), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
//判断iphone6+系列
#define kiPhone6Plus ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2208), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
// 判断iPhoneX
#define IS_IPHONE_X ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
// 判断iPHoneXr
#define IS_IPHONE_Xr ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
// 判断iPhoneXs
#define IS_IPHONE_Xs ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
// 判断iPhoneXs Max
#define IS_IPHONE_Xs_Max ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)

// 控件宽高、字体适配
#define autoScaleW(width) (float)width / 375 * WIDTH
#define autoScaleH(height) (float)height / 667 * HEIGHT

/*****************************系统版本***************************/

// 判断是否是IOS7
#define IS_IOS_7  ([[[UIDevice currentDevice] systemVersion] floatValue] >= 7.0 ? YES : NO)
// 判断是否是IOS8
#define IS_IOS_8  ([[[UIDevice currentDevice] systemVersion] floatValue] >= 8.0 ? YES : NO)
// 判断是否是IOS9
#define IS_IOS_9  ([[[UIDevice currentDevice] systemVersion] floatValue] >= 9.0 ? YES : NO)
// 判断是否是IOS10
#define IS_IOS_10 ([[[UIDevice currentDevice] systemVersion] floatValue] >= 10.0 ? YES : NO)
// 判断是否是IOS10
#define IS_IOS_11 ([[[UIDevice currentDevice] systemVersion] floatValue]>=11.0)

/*****************************APP信息***************************/

// app版本
#define AppVersion      [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleShortVersionString"]
// app build版本
#define AppBuildVersion [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleVersion"]
// app名称
#define AppName         [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleDisplayName"]
// 当前系统语言
#define CurrentLanguage ([[NSLocale preferredLanguages] objectAtIndex:0])

#if TARGET_IPHONE_SIMULATOR //模拟器
#define IS_SIMULATOR YES
#elif TARGET_OS_IPHONE      //真机
#define IS_SIMULATOR NO
#endif

/*****************************颜色*****************************/

#define RGB(r,g,b) [UIColor colorWithRed:(float)r/255.0f green:(float)g/255.0f blue:(float)b/255.0f alpha:1.0f]
#define RGBA(r,g,b,a) [UIColor colorWithRed:(float)r/255.0f green:(float)g/255.0f blue:(float)b/255.0f alpha:a]
#define RGBValue(value) [UIColor colorWithRed:((float)((value & 0xFF0000) >> 16))/255.0 green:((float)((value & 0xFF00) >> 8))/255.0 blue:((float)(value & 0xFF))/255.0 alpha:1.0]
#define RGBAValue(value,a) [UIColor colorWithRed:((float)((value & 0xFF0000) >> 16))/255.0 green:((float)((value & 0xFF00) >> 8))/255.0 blue:((float)(value & 0xFF))/255.0 alpha:a] //a:透明度

#define AppThemeColor RGBValue(0xECA73F)
#define PageColor RGBValue(0xF5F5F5)
#define kTitleColor RGBValue(0x030303)
#define kShadowColor RGBValue(0x24709C)
#define kBlueColor RGBValue(0x00A8FF)
#define kGreenColor RGBValue(0x7AD300)
#define kLightBlackColor [UIColor colorWithRed:0.0 green:0.0 blue:0.0 alpha:0.8]
#define kLineColor RGBValue(0xEEEEEE)
#define kWhiteColor RGBValue(0xFFFFFF)
#define kBlackColor RGBValue(0x000000)
#define kBorderGrayColor RGBValue(0xCCCCCC)
#define TableViewDefaultBGColor RGBValue(0xfafafa) // 默认背景颜色
#define kSeparatorColor RGB(235,235,235) // 分割线颜色
#define ButtonColor RGBValue(0x00CD07)
#define kBlack55Color RGBValue(0x555555)
#define kVerifiedUnCommitColor RGBValue(0xB4B4B4)
#define kVerifiedOnColor RGBValue(0x0091FF)
#define kVerifiedFailColor RGBValue(0xE02020)

#define JSFontMin(size) [UIFont systemFontOfSize:MAX(size, autoScaleW(size))]


#ifdef DEBUG
#define KOnline NO

#else
#define KOnline YES
#endif

/**
 *  完美解决Xcode NSLog打印不全的宏
 */
#ifdef DEBUG
#define NSLog(...) printf("%f %s\n",[[NSDate date]timeIntervalSince1970],[[NSString stringWithFormat:__VA_ARGS__]UTF8String]);
#else
#define NSLog(format, ...)
#endif

#endif /* JS_pch */
